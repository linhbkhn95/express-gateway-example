http:
  port: 80
# admin:
#   port: 9876
#   host: localhost
https:
  port: 9443
  hostname: localhost
  # tls:
  #   "*.demo.io":
  #       key: example/keys/demo.io.key.pem
  #       cert: example/keys/demo.io.cert.pem
  #   "api.acme.com":
  #       key: example/keys/acme.com.key.pem
  #       cert: example/keys/acme.com.cert.pem
  #   "default":
  #       key: example/keys/eg.io.key.pem
  #       cert: example/keys/eg.io.cert.pem
apiEndpoints:
  api:
    host: localhost
    paths: "/ip"
  user:
    methods: 'GET,POST,PUT' 
    host: localhost
    paths: "/user*"
  shop:
    methods: 'GET,POST,PUT' 
    host: localhost
    paths: "/healthz*"

serviceEndpoints:
  httpbin:
    url: "https://httpbin.org"
  userService:
    url: "http://localhost:1339"
  shopService:
    url: "http://localhost:1337"
policies:
  - basic-auth
  - cors
  - expression
  - key-auth
  - log
  - oauth2
  - proxy
  - rate-limit
  - jwt
  - request-transformer

pipelines:
  # default:
  #   apiEndpoints:
  #     - api
  #   policies:
  #   # Uncomment `key-auth:` when instructed to in the Getting Started guide.
  #   # - key-auth:
  #     - proxy:
  #         - action:
  #             serviceEndpoint: httpbin
  #             changeOrigin: true
  #  - name: veoAPI
  bin:
    apiEndpoints:
      - api
    policies:
      #  - expression:
      #   - action:
      #       jscode: |
      #         if (req.url.startsWith('/discussions')) {
      #           const slug = req.url.substr('/discussions'.length);
      #           req.url = '/d' + slug;
      #         }
      #  - key-auth: # this is intentionaly disabled to allow temporary access
      - proxy:
          - action:
              serviceEndpoint: httpbin
              changeOrigin: true
  user:
    apiEndpoints:
      - user
    policies:
      - jwt:
          action:
            secretOrPublicKey: 'the-secret-key'
            checkCredentialExistence: false
      - log:
          action:
            message: '${req.method} ${req.originalUrl}'
      - request-transformer:
          action:
            headers:
              add:
                requestID: 'requestID'
      - proxy:
          - action:
              serviceEndpoint: userService
  shop:
    apiEndpoints:
      - shop
    policies:
      - proxy:
          - action:
              serviceEndpoint: shopService
              # changeOrigin: true
